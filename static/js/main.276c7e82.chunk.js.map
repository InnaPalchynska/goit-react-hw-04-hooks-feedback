{"version":3,"sources":["components/section/Section.js","components/feedback/Feedback.js","components/statistics/Statistics.js","components/notification/Notification.js","data/feedBackState.js","App.js","index.js"],"names":["Section","title","children","className","Feedback","feedbackState","onAddFeedback","map","el","onClick","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","useState","setGood","setNeutral","setBad","countPositiveFeedbackPercentage","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wUAiBeA,MAdf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,0BAASC,UAAU,UAAnB,UACG,CAAEF,UAAW,oBAAIE,UAAU,QAAd,SAAuBF,IACpCC,MCKQE,G,MAVE,SAAC,GAAD,IAAGC,EAAH,EAAGA,cAAeC,EAAlB,EAAkBA,cAAlB,OACf,oBAAIH,UAAU,WAAd,SACGE,EAAcE,KAAI,SAAAC,GAAE,OACnB,oBAAaL,UAAU,iBAAvB,SACE,wBAAQM,QAAS,kBAAMH,EAAcE,IAArC,SAA2CA,KADpCA,UCOAE,G,MAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAIZ,UAAU,aAAd,UACE,qBAAIA,UAAU,aAAd,mBAAkCQ,KAClC,qBAAIR,UAAU,aAAd,sBAAqCS,KACrC,qBAAIT,UAAU,aAAd,kBAAiCU,KACjC,qBAAIV,UAAU,aAAd,oBAAmCW,KACnC,qBAAIX,UAAU,aAAd,gCAA+CY,EAA/C,YCQWC,MAdf,YAA8C,IAAtBC,EAAqB,EAArBA,QAASf,EAAY,EAAZA,SAC/B,OACE,oCACG,CAAEe,YAAa,oBAAId,UAAU,QAAd,SAAuBc,IACtCf,MCNMG,EAAgB,CAAC,OAAQ,UAAW,OCQlC,SAASa,IACtB,MAAwBC,mBAAS,GAAjC,mBAAOR,EAAP,KAAaS,EAAb,KAEA,EAA8BD,mBAAS,GAAvC,mBAAOP,EAAP,KAAgBS,EAAhB,KAEA,EAAsBF,mBAAS,GAA/B,mBAAON,EAAP,KAAYS,EAAZ,KAkBMR,EAAQH,EAAOC,EAAUC,EAEzBU,EAAkCT,EACpCU,KAAKC,MAAOd,EAAOG,EAAS,KAC5B,EAEJ,OACE,qCACE,cAAC,EAAD,CAASb,MAAM,wBAAf,SACE,cAAC,EAAD,CACEI,cAAeA,EACfC,cA3Bc,SAAAE,GACpB,OAAQA,GACN,IAAK,OACHY,EAAQT,EAAO,GACf,MACF,IAAK,UACHU,EAAWT,EAAU,GACrB,MACF,IAAK,MACHU,EAAOT,EAAM,GACb,MACF,QACE,aAmBF,cAAC,EAAD,CAASZ,MAAM,aAAf,SACGa,EACC,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBQ,IAGtB,cAAC,EAAD,CAAcN,QAAQ,2BCnDhCS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.276c7e82.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\nimport './Section.css';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section className=\"section\">\r\n      {{ title } && <h2 className=\"title\">{title}</h2>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import './Feedback.css';\r\n\r\nconst Feedback = ({ feedbackState, onAddFeedback }) => (\r\n  <ul className=\"Feedback\">\r\n    {feedbackState.map(el => (\r\n      <li key={el} className=\"Feedback__item\">\r\n        <button onClick={() => onAddFeedback(el)}>{el}</button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default Feedback;\r\n","import './Statistics.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className=\"Statistics\">\r\n    <li className=\"Statistics\">good: {good}</li>\r\n    <li className=\"Statistics\">neutral: {neutral}</li>\r\n    <li className=\"Statistics\">bad: {bad}</li>\r\n    <li className=\"Statistics\">total: {total}</li>\r\n    <li className=\"Statistics\">positive feedback: {positivePercentage}%</li>\r\n  </ul>\r\n);\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message, children }) {\r\n  return (\r\n    <section>\r\n      {{ message } && <h3 className=\"title\">{message}</h3>}\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Notification;\r\n","export const feedbackState = ['good', 'neutral', 'bad'];\r\n","import { useState } from 'react';\nimport './App.css';\nimport Section from './components/section/Section';\nimport Feedback from './components/feedback';\nimport Statistics from './components/statistics';\nimport Notification from './components/notification';\nimport { feedbackState } from './data/feedBackState';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n\n  const [neutral, setNeutral] = useState(0);\n\n  const [bad, setBad] = useState(0);\n\n  const onAddFeedback = el => {\n    switch (el) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const total = good + neutral + bad;\n\n  const countPositiveFeedbackPercentage = total\n    ? Math.round((good / total) * 100)\n    : 0;\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <Feedback\n          feedbackState={feedbackState}\n          onAddFeedback={onAddFeedback}\n        ></Feedback>\n      </Section>\n\n      <Section title=\"Statistics\">\n        {total ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positivePercentage={countPositiveFeedbackPercentage}\n          ></Statistics>\n        ) : (\n          <Notification message=\"No feedback given\"></Notification>\n        )}\n      </Section>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}